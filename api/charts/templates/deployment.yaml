apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nodejs-api.fullname" . }}
  labels:
    {{- include "nodejs-api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nodejs-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nodejs-api.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image.repository }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet:
            path: /healthz
            port: 3000
          failureThreshold: 30
          periodSeconds: 10
        env:
        - name: POSTGRES_DB
          value: {{ .Values.postgres.database }}
        - name: POSTGRES_HOST
          value: {{ include "nodejs-api.fullname" . }}-db-rw
{{- if gt (int .Values.postgres.replicaCount) 1 }}
        - name: POSTGRES_REPLICA_HOST
          value: {{ include "nodejs-api.fullname" . }}-db-ro
{{- end }}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "nodejs-api.fullname" . }}-db-{{ .Values.postgres.database }}
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "nodejs-api.fullname" . }}-db-{{ .Values.postgres.database }}
              key: password
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app: backend
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
